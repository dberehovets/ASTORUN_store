{"version":3,"sources":["components/app-collection-card/app-collection-card.component.tsx","redux/collections/collections.selectors.ts","pages/shop/shop.page.tsx","HOCS/with-loader.hoc.tsx","assets/images/empty-products.svg","components/app-empty-products/app-empty-products.component.tsx"],"names":["AppCollectionCard","item","name","image","match","useRouteMatch","redirectUrl","path","t","useTranslation","to","className","style","backgroundImage","selectCollectionsState","collections","selectCollections","createSelector","selectCollectionsLoading","isLoading","withLoader","setLoading","dispatch","useDispatch","useSelector","isCollectionsLoading","useEffect","fetchCollectionsStart","map","length","Inner","displayName","props","useState","display","AppEmptyProducts","src","EmptyCart","alt"],"mappings":"wLAqCeA,G,OA3BW,SAAC,GAEsB,IAD/CC,EAC8C,EAD9CA,KAEQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACRC,EAAQC,cACRC,EAAW,UAAMF,EAAMG,KAAZ,YAAoBL,GAC7BM,EAAMC,cAAND,EAER,OACE,cAAC,IAAD,CAAME,GAAIJ,EAAV,SACE,sBAAKK,UAAU,kBAAf,UACE,qBACEA,UAAU,8BACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAT,QAG1B,sBAAKQ,UAAU,2BAAf,UACE,oBAAIA,UAAU,yBAAd,SAAwCH,EAAE,eAAD,OAAgBN,MACzD,qBAAKS,UAAU,4BAAf,SACGH,EAAE,gC,QCzBTM,EAAyB,SAAC,GAAD,SAAGC,aAErBC,EAGTC,YACF,CAACH,IACD,qBAAGC,eAGQG,EAGTD,YACF,CAACH,IACD,qBAAGK,a,SCsBUC,uBA3BE,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WACVb,EAAMC,cAAND,EACFc,EAAWC,cACXR,EAA4BS,YAAYR,GACxCS,EAAuBD,YAAYN,GAUzC,OARAQ,qBAAU,WACRJ,EAASK,iBACR,CAACL,IAEJI,qBAAU,WACRL,EAAWI,KACV,CAACA,EAAsBJ,IAGxB,sBAAKV,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BH,EAAE,qBAC9B,qBAAKG,UAAU,YAAf,SACGI,EAAYa,KAAI,SAAC3B,GAAD,OACf,cAAC,EAAD,CAAmCA,KAAMA,GAAjBA,EAAKC,YAG/Ba,EAAYc,QAAU,cAAC,IAAD,W,0ECLfT,IAvBI,SACjBU,GAKA,OAFAA,EAAMC,YAAN,qBAAkCD,EAAMC,aAAeD,EAAM5B,KAA7D,KAEO,SAAC8B,GAAW,IAAD,EACgBC,oBAAkB,GADlC,mBACTd,EADS,KACEE,EADF,KAGhB,OACE,qCACGF,GAAa,cAAC,IAAD,IACd,qBACER,UAAU,iBACVC,MAAOO,EAAY,CAAEe,QAAS,QAAW,GAF3C,SAIE,cAACJ,EAAD,2BAAWE,GAAX,IAAkBb,UAAWA,EAAWE,WAAYA,a,kFCxB/C,MAA0B,2C,OCsB1Bc,IAjBoB,WAAO,IAChC3B,EAAMC,cAAND,EAER,OACE,sBAAKG,UAAU,qBAAf,UACE,qBACEyB,IAAKC,EACLC,IAAI,iBACJ3B,UAAU,8BAEZ,mBAAGA,UAAU,2BAAb,SACGH,EAAE,oC","file":"static/js/7.9c502ebe.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { ICollectionItem } from '../../redux/collections/collections.types';\nimport './app-collection-card.styles.scss';\n\ninterface ICollectionItemProps {\n  item: ICollectionItem;\n}\n\nconst AppCollectionCard = ({\n  item,\n}: ICollectionItemProps): React.ReactElement => {\n  const { name, image } = item;\n  const match = useRouteMatch();\n  const redirectUrl = `${match.path}/${name}`;\n  const { t } = useTranslation();\n\n  return (\n    <Link to={redirectUrl}>\n      <div className=\"collection-item\">\n        <div\n          className=\"collection-item__background\"\n          style={{ backgroundImage: `url(${image})` }}\n        />\n\n        <div className=\"collection-item__content\">\n          <h4 className=\"collection-item__title\">{t(`collections.${name}`)}</h4>\n          <div className=\"collection-item__subtitle\">\n            {t('actions.shop_now')}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default AppCollectionCard;\n","import { createSelector, Selector } from 'reselect';\nimport { RootState } from '../root.reducer';\nimport { ICollectionsState, TCollections } from './collections.types';\n\nconst selectCollectionsState = ({ collections }: RootState) => collections;\n\nexport const selectCollections: Selector<\n  RootState,\n  TCollections\n> = createSelector(\n  [selectCollectionsState],\n  ({ collections }: ICollectionsState) => collections\n);\n\nexport const selectCollectionsLoading: Selector<\n  RootState,\n  boolean\n> = createSelector(\n  [selectCollectionsState],\n  ({ isLoading }: ICollectionsState): boolean => isLoading\n);\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './shop.styles.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppEmptyProducts from '../../components/app-empty-products/app-empty-products.component';\nimport { fetchCollectionsStart } from '../../redux/collections/collections.actions';\nimport AppCollectionCard from '../../components/app-collection-card/app-collection-card.component';\nimport {\n  selectCollections,\n  selectCollectionsLoading,\n} from '../../redux/collections/collections.selectors';\nimport { TCollections } from '../../redux/collections/collections.types';\nimport withLoader, { IWithLoaderProps } from '../../HOCS/with-loader.hoc';\n\nconst ShopPage = ({ setLoading }: IWithLoaderProps): React.ReactElement => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const collections: TCollections = useSelector(selectCollections);\n  const isCollectionsLoading = useSelector(selectCollectionsLoading);\n\n  useEffect(() => {\n    dispatch(fetchCollectionsStart());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setLoading(isCollectionsLoading);\n  }, [isCollectionsLoading, setLoading]);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-title\">{t('page.shop.title')}</h1>\n      <div className=\"shop-grid\">\n        {collections.map((item) => (\n          <AppCollectionCard key={item.name} item={item} />\n        ))}\n      </div>\n      {!collections.length && <AppEmptyProducts />}\n    </div>\n  );\n};\n\nexport default withLoader<IWithLoaderProps>(ShopPage);\n","import React, { useState } from 'react';\nimport Spinner from '../components/spinner/spinner.component';\n\nexport interface IWithLoaderProps {\n  isLoading: boolean;\n  setLoading: (isLoading: boolean) => void;\n}\n\nconst withLoader = <P extends IWithLoaderProps>(\n  Inner: React.ComponentType<P>\n): React.FC<P & IWithLoaderProps> => {\n  // eslint-disable-next-line no-param-reassign\n  Inner.displayName = `withLoader(${Inner.displayName || Inner.name})`;\n\n  return (props) => {\n    const [isLoading, setLoading] = useState<boolean>(false);\n\n    return (\n      <>\n        {isLoading && <Spinner />}\n        <div\n          className=\"flex-container\"\n          style={isLoading ? { display: 'none' } : {}}\n        >\n          <Inner {...props} isLoading={isLoading} setLoading={setLoading} />\n        </div>\n      </>\n    );\n  };\n};\n\nexport default withLoader;\n","export default __webpack_public_path__ + \"static/media/empty-products.4f81bf44.svg\";","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport EmptyCart from '../../assets/images/empty-products.svg';\nimport './app-empty-products.styles.scss';\n\nconst AppEmptyProducts: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"app-empty-products\">\n      <img\n        src={EmptyCart}\n        alt=\"empty products\"\n        className=\"app-empty-products__image\"\n      />\n      <p className=\"app-empty-products__text\">\n        {t('page.products.no_products')}\n      </p>\n    </div>\n  );\n};\n\nexport default AppEmptyProducts;\n"],"sourceRoot":""}