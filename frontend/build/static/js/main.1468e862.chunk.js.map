{"version":3,"sources":["components/app-quantity-control/app-quantity-control.component.tsx","components/app-cart-item/app-cart-item.component.tsx","components/app-cart-items/app-cart-items.component.tsx","hooks/use-languages.hook.tsx","components/app-locales/app-locales.component.tsx","redux/cart/cart.types.ts","i18n/i18n.ts","redux/notifications/notifications.selectors.ts","components/app-notification-listener/app-notification-listener.component.tsx","components/error-boundary/error-boundary.component.tsx","constants/cart.constants.ts","services/local-storage.service.ts","assets/images/empty-cart.svg","components/app-cart-placeholder/app-cart-placeholder.component.tsx","components/app-cart/app-cart.component.tsx","components/app-footer/app-footer.component.tsx","assets/images/logo1.png","components/app-nav-menu/app-nav-menu.component.tsx","components/app-open-cart-btn/app-open-cart-btn.component.tsx","components/app-header/app-header.component.tsx","layouts/main/main.layout.tsx","routes/app-route.component.tsx","App.tsx","redux/cart/cart.utils.ts","redux/cart/cart.reducer.ts","redux/collections/collections.reducer.ts","redux/notifications/notifications.reducer.ts","redux/products/products.reducer.ts","redux/root.reducer.ts","redux/cart/cart.sagas.ts","redux/collections/collections.sagas.ts","redux/notifications/notifications.sagas.ts","redux/products/products.sagas.ts","redux/root.saga.ts","redux/store.ts","reportWebVitals.ts","index.tsx","routes/index.ts","redux/cart/cart.actions.ts","redux/notifications/notifications.actions.ts","redux/collections/collections.types.ts","redux/products/products.types.ts","redux/notifications/notifications.types.ts","utils/checkers.utils.ts","api/config.ts","api/api.ts","api/requests.ts","constants/notifications.constants.ts","redux/cart/cart.selectors.ts","components/app-btn-close/app-btn-close.component.tsx","redux/collections/collections.actions.ts","redux/products/products.actions.ts","components/spinner/spinner.component.tsx"],"names":["AppQuantityControl","value","onChange","className","type","onClick","AppCartItem","item","onQuantityChange","onRemove","imageUrl","name","price","quantity","selectedSize","t","useTranslation","Card","classes","root","CardMedia","image","title","AppCartItems","cartItems","dispatch","useDispatch","handleItemQuantityChange","useCallback","id","changeItemQuantityAction","handleRemove","removeCartItemAction","map","useLanguages","i18n","options","language","resources","languages","Object","keys","useState","activeLanguage","setActiveLanguage","setLanguage","lang","changeLanguage","AppLocales","toUpperCase","TOGGLE_CART","ADD_ITEM","CHANGE_ITEM_QUANTITY","REMOVE_CART_ITEM","CLEAR_CART","LOAD_CART_START","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","initReactOptions","en","translation","ru","ua","lng","interpolation","escapeValue","use","initReactI18next","init","selectNotifications","createSelector","notifications","AppNotificationListener","useSelector","message","Alert","severity","variant","onClose","removeNotification","ErrorBoundary","props","state","hasError","this","children","style","backgroundImage","React","Component","CART_ITEMS_STORAGE_KEY","LocalStorageService","getItem","key","localStorage","JSON","parse","setItem","stringify","AppCartPlaceholder","onRedirect","history","useHistory","src","EmptyCart","alt","Button","size","color","push","ShopRoute","getPath","SlideTransition","ref","Slide","direction","Transition","forwardRef","CHECKOUT_ROUTE","CheckoutRoute","AppCart","isOpened","selectCartIsOpened","cartItemsEntries","selectCartItems","handleClose","toggleCartAction","useEffect","loadCartStartAction","sizeId","saveCartItems","Dialog","open","keepMounted","TransitionComponent","aria-labelledby","aria-describedby","scrollPaper","paperScrollPaper","DialogTitle","DialogContent","length","navigation","text","path","AppFooter","currentYear","useMemo","Date","getFullYear","link","to","AppNavMenu","toggleMenu","MenuOpen","Menu","AppOpenCartBtn","cartItemsQuantity","selectCartItemsQuantity","Boolean","AppHeader","Logo","activeClassName","MainLayout","AppRoute","route","component","exact","App","fallback","MainRoute","ProductDetailsRoute","CollectionOverviewRoute","addItemToCart","itemToAdd","cartItemId","itemId","cartItem","increaseItemQuantity","removeItemFromCart","cartItemsCopy","changeItemQuantity","changedQuantity","formCartItems","storedCartItems","products","reduce","cartItemsStore","productId","product","find","sizes","mainImage","images","isMain","url","INITIAL_STATE","items","isLoading","cartReducer","action","payload","collections","error","collectionsReducer","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_FAILURE","removeId","filter","notificationsReducer","ADD_NOTIFICATION","REMOVE_NOTIFICATION","page","pages","total","productsReducer","FETCH_PRODUCTS_START","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAILURE","rootReducer","combineReducers","cart","loadCart","onLoadCartStart","cartSagas","put","loadCartSuccessAction","productIds","uniqProductIds","Set","getProductsByIds","response","data","loadCartFailureAction","addNotification","ERROR_NOTIFICATION","takeEvery","all","call","fetchCollections","onFetchCollectionsStart","collectionsSagas","getCollections","fetchCollectionsSuccess","fetchCollectionsFailure","takeLatest","onAddNotification","notificationsSagas","delay","removeNotificationAction","fetchProducts","onFetchProductsStart","productsSagas","collection","getProducts","count","results","fetchProductsSuccess","totalProductsCount","productsPageSize","pageSize","Math","ceil","fetchProductsFailure","rootSaga","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","middlewares","persistConfig","whitelist","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","ReactDOM","render","ThemeProvider","document","getElementById","ShopPage","lazy","addItemAction","clearCartAction","notification","uniqid","isObject","AppConfig","baseURL","process","REACT_APP_BASE_URL","api","axios","create","parseData","Array","isArray","entry","entries","res","parsedKey","replace","str","split","parseObjectKey","interceptors","get","params","page_size","getProductById","createOrder","first_name","firstName","last_name","lastName","del_address","delAddress","del_city","delCity","email","phone","post","ids","selectCart","cartItemEntries","selectCartTotal","totalPrice","Number","toFixed","AppBtnClose","defaultProps","fetchCollectionsStart","fetchProductsStart","Spinner"],"mappings":"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","file":"static/js/main.1468e862.chunk.js","sourcesContent":["import React from 'react';\nimport './app-quantity-control.styles.scss';\n\ninterface IQuantityControlProps {\n  value: number;\n  onChange: (quantity: number) => void;\n}\n\nconst AppQuantityControl = ({\n  value,\n  onChange,\n}: IQuantityControlProps): React.ReactElement => {\n  return (\n    <div className=\"app-quantity-control\">\n      <button\n        type=\"button\"\n        className=\"btn-default app-quantity-control__btn\"\n        onClick={() => onChange(value - 1)}\n      >\n        ❮\n      </button>\n      <span className=\"app-quantity-control__value\">{value}</span>\n      <button\n        type=\"button\"\n        className=\"btn-default app-quantity-control__btn\"\n        onClick={() => onChange(value + 1)}\n      >\n        ❯\n      </button>\n    </div>\n  );\n};\n\nexport default AppQuantityControl;\n","import { CardMedia, Card } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ICartItem } from '../../redux/cart/cart.types';\nimport './app-cart-item.styles.scss';\nimport AppBtnClose from '../app-btn-close/app-btn-close.component';\nimport AppQuantityControl from '../app-quantity-control/app-quantity-control.component';\n\ninterface AppCartItemProps {\n  item: ICartItem;\n  onQuantityChange: (quantity: number) => void;\n  onRemove: () => void;\n}\n\nconst AppCartItem = ({\n  item,\n  onQuantityChange,\n  onRemove,\n}: AppCartItemProps): React.ReactElement => {\n  const { imageUrl, name, price, quantity, selectedSize } = item;\n  const { t } = useTranslation();\n\n  return (\n    <Card classes={{ root: 'app-cart-item' }}>\n      <CardMedia\n        classes={{ root: 'app-cart-item__image' }}\n        image={imageUrl}\n        title={name}\n      />\n      <div className=\"app-cart-item__details\">\n        <h4 className=\"app-cart-item__title\">{name}</h4>\n        <div className=\"app-cart-item__details-row\">\n          <div className=\"app-cart-item__details-label\">{t('label.size')}:</div>\n          <div className=\"app-cart-item__details-value\">\n            {selectedSize.name}\n          </div>\n        </div>\n        <div className=\"app-cart-item__details-row\">\n          <div className=\"app-cart-item__details-label\">\n            {t('label.price')}:\n          </div>\n          <div className=\"app-cart-item__details-value\">{price}</div>\n        </div>\n        <div className=\"app-cart-item__details-row\">\n          <div className=\"app-cart-item__details-label\">\n            {t('label.quantity')}:\n          </div>\n          <div className=\"app-cart-item__details-value\">\n            <AppQuantityControl value={quantity} onChange={onQuantityChange} />\n          </div>\n        </div>\n      </div>\n      <div className=\"app-cart-item__remove\">\n        <AppBtnClose onClick={onRemove} />\n      </div>\n    </Card>\n  );\n};\n\nexport default AppCartItem;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeItemQuantityAction,\n  removeCartItemAction,\n} from '../../redux/cart/cart.actions';\nimport { TCartItemsEntries } from '../../redux/cart/cart.types';\nimport AppCartItem from '../app-cart-item/app-cart-item.component';\n\ninterface AppCartItemsProps {\n  cartItems: TCartItemsEntries;\n}\n\nconst AppCartItems = ({ cartItems }: AppCartItemsProps): React.ReactElement => {\n  const dispatch = useDispatch();\n\n  const handleItemQuantityChange = useCallback(\n    (id: string) => (quantity: number) => {\n      dispatch(changeItemQuantityAction({ id, quantity }));\n    },\n    [dispatch]\n  );\n\n  const handleRemove = useCallback(\n    (id: string) => () => dispatch(removeCartItemAction(id)),\n    [dispatch]\n  );\n\n  return (\n    <div className=\"app-cart-items\">\n      {cartItems.map(([id, item]) => (\n        <AppCartItem\n          key={id}\n          item={item}\n          onQuantityChange={handleItemQuantityChange(id)}\n          onRemove={handleRemove(id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default AppCartItems;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype SetLanguage = (lang: string) => void;\n\ntype useLanguagesReturn = {\n  languages: string[];\n  activeLanguage: string;\n  setLanguage: SetLanguage;\n};\n\nconst useLanguages = (): useLanguagesReturn => {\n  const { i18n } = useTranslation();\n  const { options, language } = i18n;\n\n  const resources = options.resources || {};\n  const languages: string[] = Object.keys(resources);\n\n  const [activeLanguage, setActiveLanguage] = useState<string>(language);\n\n  const setLanguage: SetLanguage = (lang) => {\n    if (activeLanguage === lang) {\n      return;\n    }\n\n    setActiveLanguage(lang);\n    i18n.changeLanguage(lang);\n  };\n\n  return { languages, activeLanguage, setLanguage };\n};\n\nexport default useLanguages;\n","import React from 'react';\nimport useLanguages from '../../hooks/use-languages.hook';\n\nconst AppLocales = (): JSX.Element => {\n  const { languages, activeLanguage, setLanguage } = useLanguages();\n\n  return (\n    <div className=\"app-locales\">\n      {languages.map((lang) => (\n        <button\n          key={lang}\n          className={`\n            btn-default\n            app-locale-btn\n            ${activeLanguage === lang && 'is-active'}\n          `}\n          onClick={() => setLanguage(lang)}\n          type=\"button\"\n        >\n          {lang.toUpperCase()}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default AppLocales;\n","import { IError } from '../../types/error.types';\nimport { IProductSize } from '../products/products.types';\n\nexport const TOGGLE_CART = 'TOGGLE_CART';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const CHANGE_ITEM_QUANTITY = 'CHANGE_ITEM_QUANTITY';\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const LOAD_CART_START = 'LOAD_CART_START';\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\n\nexport type IItemToAdd = {\n  id: string;\n  name: string;\n  imageUrl: string;\n  selectedSize: IProductSize;\n  price: number;\n};\n\nexport interface ICartItem extends IItemToAdd {\n  quantity: number;\n}\n\nexport type ICartItems = Record<string, ICartItem>;\n\nexport type ICartState = {\n  isOpened: boolean;\n  items: ICartItems;\n  isLoading: boolean;\n};\n\nexport interface IToggleCartAction {\n  type: typeof TOGGLE_CART;\n  payload?: null;\n}\n\nexport interface IAddItemAction {\n  type: typeof ADD_ITEM;\n  payload: IItemToAdd;\n}\n\nexport interface IChangeItemQuantityPayload {\n  id: string;\n  quantity: number;\n}\n\nexport type TCartItemsEntries = Array<[string, ICartItem]>;\n\nexport interface IChangeItemQuantityAction {\n  type: typeof CHANGE_ITEM_QUANTITY;\n  payload: IChangeItemQuantityPayload;\n}\n\nexport interface IRemoveCartItemAction {\n  type: typeof REMOVE_CART_ITEM;\n  payload: string;\n}\n\nexport interface IClearCartAction {\n  type: typeof CLEAR_CART;\n}\n\nexport interface ILoadCartStartAction {\n  type: typeof LOAD_CART_START;\n}\n\nexport interface ILoadCartSuccessAction {\n  type: typeof LOAD_CART_SUCCESS;\n  payload: ICartItems;\n}\n\nexport interface ILoadCartFailureAction {\n  type: typeof LOAD_CART_FAILURE;\n  payload: IError;\n}\n\nexport type CartActionTypes =\n  | IToggleCartAction\n  | IAddItemAction\n  | IRemoveCartItemAction\n  | IChangeItemQuantityAction\n  | IClearCartAction\n  | ILoadCartFailureAction\n  | ILoadCartSuccessAction\n  | ILoadCartStartAction;\n","import i18n, { InitOptions } from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from './locales/en.json';\nimport ru from './locales/ru.json';\nimport ua from './locales/ua.json';\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en: {\n    translation: en,\n  },\n  ru: {\n    translation: ru,\n  },\n  ua: {\n    translation: ua,\n  },\n};\n\nconst initReactOptions: InitOptions = {\n  resources,\n  lng: 'en',\n\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init(initReactOptions);\n\nexport default i18n;\n","import { createSelector } from 'reselect';\nimport { RootState } from '../root.reducer';\nimport { INotificationsState } from './notifications.types';\n\nconst selectNotificationsState = ({\n  notifications,\n}: RootState): INotificationsState => notifications;\n\nexport const selectNotifications = createSelector(\n  [selectNotificationsState],\n  ({ notifications }) => notifications\n);\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\nimport './app-notification-listener.styles.scss';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNotifications } from '../../redux/notifications/notifications.selectors';\nimport { TNotifications } from '../../redux/notifications/notifications.types';\nimport { removeNotification } from '../../redux/notifications/notifications.actions';\n\nconst AppNotificationListener: React.FC = () => {\n  const notifications: TNotifications = useSelector(selectNotifications);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"app-notification\">\n      {notifications.map(({ id, type, message }) => (\n        <Alert\n          key={id}\n          classes={{ root: 'app-notification__item' }}\n          severity={type}\n          variant=\"filled\"\n          onClose={() => dispatch(removeNotification(id))}\n        >\n          {message || t('errors.unknown_error')}\n        </Alert>\n      ))}\n    </div>\n  );\n};\n\nexport default AppNotificationListener;\n","import React from 'react';\nimport './error-boundary.styles.scss';\n\ntype ErrorBoundaryProps = Record<string, unknown>;\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  static getDerivedStateFromError(): ErrorBoundaryState {\n    return { hasError: true };\n  }\n\n  render(): React.ReactNode {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    if (hasError) {\n      return (\n        <div className=\"error-boundary\">\n          <div\n            className=\"error-boundary__image\"\n            style={{ backgroundImage: 'url(https://i.imgur.com/A040Lxr.png)' }}\n          />\n\n          <p className=\"error-boundary__text\">This Page is Lost in Space</p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","export const CART_ITEMS_STORAGE_KEY = 'cartItems';\n","const LocalStorageService = {\n  getItem<T = unknown>(key: string): T | null {\n    const item = localStorage.getItem(key);\n\n    if (!item) {\n      return null;\n    }\n\n    return JSON.parse(item);\n  },\n\n  setItem(key: string, value: unknown): void {\n    localStorage.setItem(key, JSON.stringify(value));\n  },\n};\n\nexport default LocalStorageService;\n","export default __webpack_public_path__ + \"static/media/empty-cart.74845b66.svg\";","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { ShopRoute } from '../../routes/index';\nimport EmptyCart from '../../assets/images/empty-cart.svg';\nimport './app-cart-placeholder.styles.scss';\n\ninterface AppCartPlaceholderProps {\n  onRedirect: () => void;\n}\n\nconst AppCartPlaceholder = ({\n  onRedirect,\n}: AppCartPlaceholderProps): React.ReactElement => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const handleRedirect = () => {\n    history.push(ShopRoute.getPath());\n    onRedirect();\n  };\n\n  return (\n    <div className=\"app-cart-placeholder\">\n      <img\n        src={EmptyCart}\n        alt=\"empty cart\"\n        className=\"app-cart-placeholder__img\"\n      />\n\n      <div className=\"app-cart-placeholder__text\">\n        {t('page.cart.placeholder')}\n      </div>\n\n      <Button\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleRedirect}\n      >\n        {t('actions.go_shop')}\n      </Button>\n    </div>\n  );\n};\n\nexport default AppCartPlaceholder;\n","import React, { ForwardedRef, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\n// eslint-disable-next-line import/no-unresolved\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Slide,\n  Button,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CART_ITEMS_STORAGE_KEY } from '../../constants/cart.constants';\nimport {\n  loadCartStartAction,\n  toggleCartAction,\n} from '../../redux/cart/cart.actions';\nimport {\n  selectCartIsOpened,\n  selectCartItems,\n} from '../../redux/cart/cart.selectors';\nimport './app-cart.styles.scss';\nimport { TCartItemsEntries } from '../../redux/cart/cart.types';\nimport LocalStorageService from '../../services/local-storage.service';\nimport AppBtnClose from '../app-btn-close/app-btn-close.component';\nimport AppCartItems from '../app-cart-items/app-cart-items.component';\nimport { CheckoutRoute } from '../../routes/index';\nimport AppCartPlaceholder from '../app-cart-placeholder/app-cart-placeholder.component';\n\nconst SlideTransition = (\n  props: TransitionProps,\n  ref: ForwardedRef<HTMLDivElement>\n): React.ReactElement => <Slide direction=\"left\" ref={ref} {...props} />;\n\nconst Transition = React.forwardRef<HTMLDivElement, TransitionProps>(\n  SlideTransition\n);\n\nconst CHECKOUT_ROUTE = CheckoutRoute.getPath();\n\nconst saveCartItems = (cartItemsEntries: TCartItemsEntries): void => {\n  const cartItems = cartItemsEntries.map(([sizeId, { id, quantity }]) => ({\n    sizeId,\n    id,\n    quantity,\n  }));\n\n  LocalStorageService.setItem(CART_ITEMS_STORAGE_KEY, cartItems);\n};\n\nconst AppCart: React.FC = () => {\n  const dispatch = useDispatch();\n  const isOpened: boolean = useSelector(selectCartIsOpened);\n  const cartItemsEntries = useSelector(selectCartItems);\n  const handleClose = () => dispatch(toggleCartAction());\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const handleCheckoutRedirect = (): void => {\n    history.push(CHECKOUT_ROUTE);\n    handleClose();\n  };\n\n  useEffect(() => {\n    dispatch(loadCartStartAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    saveCartItems(cartItemsEntries);\n  }, [cartItemsEntries]);\n\n  return (\n    <Dialog\n      open={isOpened}\n      keepMounted\n      TransitionComponent={Transition}\n      onClose={handleClose}\n      aria-labelledby={t('page.cart.title')}\n      aria-describedby={t('page.cart.title')}\n      classes={{\n        root: 'app-cart',\n        scrollPaper: 'app-cart-overlay',\n        paperScrollPaper: 'app-cart-paper',\n      }}\n    >\n      <DialogTitle\n        classes={{ root: 'app-cart-title' }}\n        id=\"alert-dialog-slide-title\"\n      >\n        <span className=\"app-cart-title__text\">{t('page.cart.title')}</span>\n        <AppBtnClose className=\"app-cart__close\" onClick={handleClose} />\n      </DialogTitle>\n      <DialogContent classes={{ root: 'app-cart-content' }}>\n        <AppCartItems cartItems={cartItemsEntries} />\n\n        {cartItemsEntries.length ? (\n          <footer className=\"app-cart-footer\">\n            <Button\n              classes={{ root: 'app-cart-checkout-btn' }}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={handleCheckoutRedirect}\n            >\n              {t('actions.go_to_checkout')}\n            </Button>\n          </footer>\n        ) : (\n          <AppCartPlaceholder onRedirect={handleClose} />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AppCart;\n","import React, { useMemo } from 'react';\nimport './app-footer.styles.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\ninterface ILink {\n  path: string;\n  text: string;\n}\n\nconst navigation: ILink[] = [\n  {\n    text: 'links.faq',\n    path: '/faq',\n  },\n  {\n    text: 'links.rules',\n    path: '/rules',\n  },\n  {\n    text: 'links.partner',\n    path: '/partnership',\n  },\n  {\n    text: 'links.offer',\n    path: '/offer',\n  },\n];\n\nconst AppFooter: React.FC = () => {\n  const { t } = useTranslation();\n\n  const currentYear = useMemo(() => {\n    const date = new Date();\n\n    return date.getFullYear();\n  }, []);\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"container footer__container\">\n        <nav className=\"footer__nav\">\n          <ul className=\"footer__list\">\n            {navigation.map((link) => (\n              <li key={link.path} className=\"footer__item\">\n                <Link to={link.path} className=\"footer__link\">\n                  {t(link.text)}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n        <div className=\"footer__copy\">&copy; Asto.run {currentYear}</div>\n      </div>\n    </footer>\n  );\n};\n\nexport default AppFooter;\n","export default __webpack_public_path__ + \"static/media/logo1.5e5c7af0.png\";","import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './app-nav-menu.styles.scss';\nimport { Menu as MenuIcon, MenuOpen as MenuOpenIcon } from '@material-ui/icons';\n\ninterface INavMenuProps {\n  children: React.ReactFragment;\n}\n\nconst AppNavMenu = ({ children }: INavMenuProps): React.ReactElement => {\n  const [isOpened, toggleMenu] = useState<boolean>(false);\n\n  return (\n    <div className=\"app-nav-menu\">\n      <div className={`app-nav-menu__wrapper ${isOpened ? 'is-opened' : ''}`}>\n        {children}\n      </div>\n\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        classes={{ root: 'app-nav-menu__btn' }}\n        onClick={() => toggleMenu(!isOpened)}\n      >\n        {isOpened ? <MenuOpenIcon /> : <MenuIcon />}\n      </Button>\n    </div>\n  );\n};\n\nexport default AppNavMenu;\n","import { Button } from '@material-ui/core';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleCartAction } from '../../redux/cart/cart.actions';\nimport { selectCartItemsQuantity } from '../../redux/cart/cart.selectors';\nimport './app-open-cart-btn.styles.scss';\n\nconst AppOpenCartBtn: React.FC = () => {\n  const dispatch = useDispatch();\n  const toggleCart = () => dispatch(toggleCartAction());\n  const cartItemsQuantity = useSelector(selectCartItemsQuantity);\n\n  return (\n    <Button\n      color=\"primary\"\n      variant=\"outlined\"\n      onClick={toggleCart}\n      classes={{ root: 'app-open-cart-btn' }}\n    >\n      <ShoppingCartOutlinedIcon color=\"primary\" />\n      {Boolean(cartItemsQuantity) && (\n        <div className=\"app-open-cart-btn__counter\">{cartItemsQuantity}</div>\n      )}\n    </Button>\n  );\n};\n\nexport default AppOpenCartBtn;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Link } from 'react-router-dom';\nimport './app-header.styles.scss';\nimport AppLocales from '../app-locales/app-locales.component';\nimport Logo from '../../assets/images/logo1.png';\nimport AppNavMenu from '../app-nav-menu/app-nav-menu.component';\nimport AppOpenCartBtn from '../app-open-cart-btn/app-open-cart-btn.component';\n\ninterface INavLink {\n  path: string;\n  text: string;\n}\n\nconst navigation: INavLink[] = [\n  {\n    text: 'links.shop',\n    path: '/shop',\n  },\n];\n\nconst AppHeader: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <header className=\"header\">\n      <div className=\"container header__container\">\n        <Link to=\"/\" className=\"logo\">\n          <img className=\"logo__img\" src={Logo} alt=\"astorun\" />\n        </Link>\n\n        <AppNavMenu>\n          <>\n            <nav className=\"nav\">\n              <ul className=\"nav__list\">\n                {navigation.map((link) => (\n                  <li key={link.path} className=\"nav__item\">\n                    <NavLink\n                      activeClassName=\"is-active\"\n                      className=\"nav__link\"\n                      to={link.path}\n                    >\n                      {t(link.text)}\n                    </NavLink>\n                  </li>\n                ))}\n              </ul>\n            </nav>\n\n            <div className=\"header__languages btn-group\">\n              <AppLocales />\n            </div>\n          </>\n        </AppNavMenu>\n\n        <AppOpenCartBtn />\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport AppCart from '../../components/app-cart/app-cart.component';\nimport AppFooter from '../../components/app-footer/app-footer.component';\nimport AppHeader from '../../components/app-header/app-header.component';\nimport './main-layout.styles.scss';\n\nconst MainLayout: React.FC = ({ children }) => (\n  <div className=\"app-main-wrapper\">\n    <AppHeader />\n    <section className=\"section\">{children}</section>\n    <AppFooter />\n    <AppCart />\n  </div>\n);\n\nexport default MainLayout;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { IRoute } from './index';\n\ninterface AppRouteProps {\n  route: IRoute;\n}\n\nconst AppRoute = ({\n  route: { component, exact, path },\n}: AppRouteProps): React.ReactElement => (\n  <Route component={component} exact={exact} path={path} />\n);\n\nexport default AppRoute;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AppNotificationListener from './components/app-notification-listener/app-notification-listener.component';\nimport ErrorBoundary from './components/error-boundary/error-boundary.component';\nimport Spinner from './components/spinner/spinner.component';\nimport MainLayout from './layouts/main/main.layout';\nimport AppRoute from './routes/app-route.component';\nimport {\n  CollectionOverviewRoute,\n  MainRoute,\n  ProductDetailsRoute,\n  ShopRoute,\n  CheckoutRoute,\n} from './routes/index';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Switch>\n      <ErrorBoundary>\n        <Suspense fallback={<Spinner />}>\n          <AppRoute route={MainRoute} />\n          <Route\n            path={[\n              ShopRoute.path,\n              ProductDetailsRoute.path,\n              CheckoutRoute.path,\n            ]}\n          >\n            <MainLayout>\n              <AppRoute route={ShopRoute} />\n              <AppRoute route={CollectionOverviewRoute} />\n              <AppRoute route={ProductDetailsRoute} />\n              <AppRoute route={CheckoutRoute} />\n            </MainLayout>\n          </Route>\n        </Suspense>\n      </ErrorBoundary>\n    </Switch>\n    <AppNotificationListener />\n  </div>\n);\n\nexport default App;\n","import { TStoredCartItems } from '../../types/storage.types';\nimport { IProductDetails } from '../products/products.types';\nimport { ICartItems, IItemToAdd } from './cart.types';\n\n// Every cart item with different size is different cart item\nconst getCartItemId = ({ selectedSize }: IItemToAdd): string => selectedSize.id;\n\nconst increaseItemQuantity = (\n  itemId: string,\n  cartItems: ICartItems\n): ICartItems => {\n  const cartItem = cartItems[itemId];\n\n  return {\n    ...cartItems,\n    [itemId]: {\n      ...cartItem,\n      quantity: cartItem.quantity + 1,\n    },\n  };\n};\n\nexport const addItemToCart = (\n  itemToAdd: IItemToAdd,\n  cartItems: ICartItems\n): ICartItems => {\n  const cartItemId = getCartItemId(itemToAdd);\n  const cartItem = cartItems[cartItemId];\n\n  if (!cartItem) {\n    return {\n      ...cartItems,\n      [cartItemId]: {\n        ...itemToAdd,\n        quantity: 1,\n      },\n    };\n  }\n\n  return increaseItemQuantity(cartItemId, cartItems);\n};\n\nexport const removeItemFromCart = (\n  cartItemId: string,\n  cartItems: ICartItems\n): ICartItems => {\n  const cartItemsCopy = { ...cartItems };\n\n  delete cartItemsCopy[cartItemId];\n\n  return cartItemsCopy;\n};\n\nexport const changeItemQuantity = (\n  cartItemId: string,\n  changedQuantity: number,\n  cartItems: ICartItems\n): ICartItems => {\n  const cartItem = cartItems[cartItemId];\n  const { quantity } = cartItem;\n  const isDecrease = cartItem.quantity > changedQuantity;\n\n  if (isDecrease && quantity === 1) {\n    return cartItems;\n  }\n\n  return {\n    ...cartItems,\n    [cartItemId]: {\n      ...cartItem,\n      quantity: changedQuantity,\n    },\n  };\n};\n\nexport const formCartItems = (\n  storedCartItems: TStoredCartItems,\n  products: IProductDetails[]\n): ICartItems => {\n  return storedCartItems.reduce(\n    (cartItemsStore, { sizeId, id: productId, quantity }) => {\n      const product = products.find(({ id }) => productId === id);\n\n      if (!product) {\n        return cartItemsStore;\n      }\n\n      const selectedSize = product.sizes.find(({ id }) => id === sizeId);\n\n      if (!selectedSize) {\n        return cartItemsStore;\n      }\n\n      const mainImage =\n        product.images.find(({ isMain }) => isMain) || product.images?.[0];\n\n      return {\n        ...cartItemsStore,\n        [sizeId]: {\n          id: product.id,\n          name: product.name,\n          imageUrl: mainImage?.url || '',\n          selectedSize,\n          price: product.price,\n          quantity,\n        },\n      };\n    },\n    {}\n  );\n};\n","import {\n  ADD_ITEM,\n  CartActionTypes,\n  CHANGE_ITEM_QUANTITY,\n  CLEAR_CART,\n  ICartState,\n  LOAD_CART_FAILURE,\n  LOAD_CART_START,\n  LOAD_CART_SUCCESS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART,\n} from './cart.types';\nimport {\n  addItemToCart,\n  changeItemQuantity,\n  removeItemFromCart,\n} from './cart.utils';\n\nconst INITIAL_STATE: ICartState = {\n  isOpened: false,\n  items: {},\n  isLoading: false,\n};\n\nconst cartReducer = (\n  state = INITIAL_STATE,\n  action: CartActionTypes\n): ICartState => {\n  switch (action.type) {\n    case TOGGLE_CART:\n      return {\n        ...state,\n        isOpened: !state.isOpened,\n      };\n\n    case LOAD_CART_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case LOAD_CART_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        items: action.payload,\n      };\n\n    case LOAD_CART_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: addItemToCart(action.payload, state.items),\n      };\n\n    case CHANGE_ITEM_QUANTITY:\n      return {\n        ...state,\n        items: changeItemQuantity(\n          action.payload.id,\n          action.payload.quantity,\n          state.items\n        ),\n      };\n\n    case REMOVE_CART_ITEM:\n      return {\n        ...state,\n        items: removeItemFromCart(action.payload, state.items),\n      };\n\n    case CLEAR_CART:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import { Reducer } from 'redux';\nimport {\n  CollectionsActionTypes,\n  FETCH_COLLECTIONS_FAILURE,\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  ICollectionsState,\n} from './collections.types';\n\nconst INITIAL_STATE: ICollectionsState = {\n  collections: [],\n  isLoading: false,\n  error: null,\n};\n\nconst collectionsReducer: Reducer<ICollectionsState, CollectionsActionTypes> = (\n  state = INITIAL_STATE,\n  action: CollectionsActionTypes\n): ICollectionsState => {\n  switch (action.type) {\n    case FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        collections: action.payload,\n        isLoading: false,\n        error: null,\n      };\n    case FETCH_COLLECTIONS_START:\n      return {\n        ...state,\n        error: null,\n        isLoading: true,\n      };\n    case FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n        collections: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default collectionsReducer;\n","import {\n  ADD_NOTIFICATION,\n  INotificationsState,\n  NotificationActionTypes,\n  REMOVE_NOTIFICATION,\n  TNotifications,\n} from './notifications.types';\n\nconst INITIAL_STATE: INotificationsState = {\n  notifications: [],\n};\n\nconst removeNotification = (\n  notifications: TNotifications,\n  removeId: string\n): TNotifications => {\n  return notifications.filter(({ id }) => id !== removeId);\n};\n\nconst notificationsReducer = (\n  state: INotificationsState = INITIAL_STATE,\n  action: NotificationActionTypes\n): INotificationsState => {\n  switch (action.type) {\n    case ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload],\n      };\n\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: removeNotification(state.notifications, action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationsReducer;\n","import {\n  FETCH_PRODUCTS_FAILURE,\n  FETCH_PRODUCTS_START,\n  FETCH_PRODUCTS_SUCCESS,\n  IProductsState,\n  ProductsActionTypes,\n} from './products.types';\n\nconst INITIAL_STATE: IProductsState = {\n  products: [],\n  isLoading: false,\n  error: null,\n  page: 1,\n  pages: 2,\n  total: 2,\n};\n\nconst productsReducer = (\n  state: IProductsState = INITIAL_STATE,\n  action: ProductsActionTypes\n): IProductsState => {\n  switch (action.type) {\n    case FETCH_PRODUCTS_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        isLoading: false,\n      };\n    case FETCH_PRODUCTS_FAILURE:\n      return {\n        ...state,\n        products: [],\n        isLoading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default productsReducer;\n","import { combineReducers } from 'redux';\nimport cartReducer from './cart/cart.reducer';\nimport collectionsReducer from './collections/collections.reducer';\nimport notificationsReducer from './notifications/notifications.reducer';\nimport productsReducer from './products/products.reducer';\n\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  collections: collectionsReducer,\n  products: productsReducer,\n  notifications: notificationsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { getProductsByIds } from '../../api/requests';\nimport { CART_ITEMS_STORAGE_KEY } from '../../constants/cart.constants';\nimport { ERROR_NOTIFICATION } from '../../constants/notifications.constants';\nimport LocalStorageService from '../../services/local-storage.service';\nimport { TStoredCartItems } from '../../types/storage.types';\nimport { addNotification } from '../notifications/notifications.actions';\nimport { loadCartFailureAction, loadCartSuccessAction } from './cart.actions';\nimport { LOAD_CART_START } from './cart.types';\nimport { formCartItems } from './cart.utils';\n\nfunction* loadCart() {\n  try {\n    const storedCartItems = LocalStorageService.getItem<TStoredCartItems>(\n      CART_ITEMS_STORAGE_KEY\n    );\n\n    if (!storedCartItems || !storedCartItems.length) {\n      yield put(loadCartSuccessAction({}));\n      return;\n    }\n\n    const productIds = storedCartItems.map(({ id }) => id);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const uniqProductIds = [...new Set(productIds)];\n\n    const response = yield getProductsByIds(uniqProductIds);\n\n    const products = response.data;\n\n    const cartItems = formCartItems(storedCartItems, products);\n\n    yield put(loadCartSuccessAction(cartItems));\n  } catch (e) {\n    yield put(loadCartFailureAction(e));\n    yield put(\n      addNotification({\n        type: ERROR_NOTIFICATION,\n        message: e.message,\n      })\n    );\n  }\n}\n\nfunction* onLoadCartStart() {\n  yield takeEvery(LOAD_CART_START, loadCart);\n}\n\nexport default function* cartSagas(): Generator {\n  yield all([call(onLoadCartStart)]);\n}\n","import { put, takeLatest, call, all } from 'redux-saga/effects';\nimport { getCollections } from '../../api/requests';\nimport { ERROR_NOTIFICATION } from '../../constants/notifications.constants';\nimport { addNotification } from '../notifications/notifications.actions';\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from './collections.actions';\nimport { FETCH_COLLECTIONS_START } from './collections.types';\n\nfunction* fetchCollections() {\n  try {\n    const { data } = yield call(getCollections);\n\n    yield put(fetchCollectionsSuccess(data));\n  } catch (e) {\n    yield put(fetchCollectionsFailure(e));\n    yield put(\n      addNotification({\n        type: ERROR_NOTIFICATION,\n        message: e.message,\n      })\n    );\n  }\n}\n\nfunction* onFetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollections);\n}\n\nexport default function* collectionsSagas(): Generator {\n  yield all([call(onFetchCollectionsStart)]);\n}\n","import { all, call, put, takeEvery, delay } from 'redux-saga/effects';\nimport { removeNotification as removeNotificationAction } from './notifications.actions';\nimport {\n  ADD_NOTIFICATION,\n  IAddNotificationAction,\n} from './notifications.types';\n\nfunction* removeNotification(action: IAddNotificationAction) {\n  yield delay(5000);\n  yield put(removeNotificationAction(action.payload.id));\n}\n\nfunction* onAddNotification() {\n  yield takeEvery(ADD_NOTIFICATION, removeNotification);\n}\n\nexport function* notificationsSagas(): Generator {\n  yield all([call(onAddNotification)]);\n}\n","import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { getCollections, getProducts, TProductsData } from '../../api/requests';\nimport { ERROR_NOTIFICATION } from '../../constants/notifications.constants';\nimport { ICollectionItem } from '../collections/collections.types';\nimport { addNotification } from '../notifications/notifications.actions';\nimport { fetchProductsFailure, fetchProductsSuccess } from './products.actions';\nimport {\n  FETCH_PRODUCTS_START,\n  FetchProductsStartAction,\n} from './products.types';\n\nconst calcTotalPages = (totalProductsCount: number, productsPageSize: number) =>\n  Math.ceil(totalProductsCount / productsPageSize);\n\nfunction* fetchProducts({ payload }: FetchProductsStartAction) {\n  try {\n    // TODO: Add collection name to search products params\n    const { data: collections } = yield call(getCollections);\n\n    const collection = collections.find(\n      ({ name }: ICollectionItem) => name === payload.collection\n    );\n\n    const { data } = yield call(getProducts, {\n      ...payload,\n      collection: collection?.name,\n    });\n\n    const { count, results } = data as TProductsData;\n\n    yield put(\n      fetchProductsSuccess({\n        pages: calcTotalPages(count, payload.pageSize),\n        products: results,\n      })\n    );\n  } catch (e) {\n    yield put(fetchProductsFailure(e));\n    yield put(\n      addNotification({\n        type: ERROR_NOTIFICATION,\n        message: e.message,\n      })\n    );\n  }\n}\n\nfunction* onFetchProductsStart() {\n  yield takeLatest(FETCH_PRODUCTS_START, fetchProducts);\n}\n\nexport default function* productsSagas(): Generator {\n  yield all([call(onFetchProductsStart)]);\n}\n","import { all, call } from 'redux-saga/effects';\nimport cartSagas from './cart/cart.sagas';\nimport collectionsSagas from './collections/collections.sagas';\nimport { notificationsSagas } from './notifications/notifications.sagas';\nimport productsSagas from './products/products.sagas';\n\nexport default function* rootSaga(): Generator {\n  yield all([\n    call(collectionsSagas),\n    call(productsSagas),\n    call(notificationsSagas),\n    call(cartSagas),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root.reducer';\nimport rootSaga from './root.saga';\n\nconst { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window as any;\n\nconst composeEnhancers: typeof compose =\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst persistConfig = {\n  key: 'root',\n  whitelist: [],\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './i18n/i18n';\nimport './assets/styles/layout/main.scss';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { persistor, store } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#dd5145',\n    },\n  },\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { lazy, LazyExoticComponent } from 'react';\n\nconst ShopPage = lazy(() => import('../pages/shop/shop.page'));\nconst MainPage = lazy(() => import('../pages/main/main.page'));\nconst CollectionOverview = lazy(\n  () => import('../pages/collection-overview/collection-overview.page')\n);\nconst ProductDetailsPage = lazy(\n  () => import('../pages/product-details/product-details.page')\n);\nconst CheckoutPage = lazy(() => import('../pages/checkout/checkout.page'));\n\nexport interface IRoute {\n  path: string;\n  exact?: boolean;\n  component: LazyExoticComponent<any> | React.FC;\n  getPath: (param?: string | number) => string;\n}\n\nexport const MainRoute: IRoute = {\n  path: '/',\n  getPath: () => '/',\n  exact: true,\n  component: MainPage,\n};\n\nexport const ShopRoute: IRoute = {\n  path: '/shop',\n  getPath: () => '/shop',\n  exact: true,\n  component: ShopPage,\n};\n\nexport const CollectionOverviewRoute: IRoute = {\n  path: '/shop/:collection',\n  getPath: (collection) => `/shop/${collection}`,\n  exact: true,\n  component: CollectionOverview,\n};\n\nexport const ProductDetailsRoute: IRoute = {\n  path: '/shop/products/:productId',\n  getPath: (id) => `/shop/products/${id}`,\n  exact: true,\n  component: ProductDetailsPage,\n};\n\nexport const CheckoutRoute: IRoute = {\n  path: '/checkout',\n  getPath: () => '/checkout',\n  exact: true,\n  component: CheckoutPage,\n};\n","import { IError } from '../../types/error.types';\nimport {\n  ADD_ITEM,\n  CHANGE_ITEM_QUANTITY,\n  CLEAR_CART,\n  IAddItemAction,\n  ICartItems,\n  IChangeItemQuantityAction,\n  IChangeItemQuantityPayload,\n  IClearCartAction,\n  IItemToAdd,\n  ILoadCartFailureAction,\n  ILoadCartStartAction,\n  ILoadCartSuccessAction,\n  IRemoveCartItemAction,\n  IToggleCartAction,\n  LOAD_CART_FAILURE,\n  LOAD_CART_START,\n  LOAD_CART_SUCCESS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART,\n} from './cart.types';\n\nexport const toggleCartAction = (): IToggleCartAction => ({\n  type: TOGGLE_CART,\n});\n\nexport const addItemAction = (itemToAdd: IItemToAdd): IAddItemAction => ({\n  type: ADD_ITEM,\n  payload: itemToAdd,\n});\n\nexport const changeItemQuantityAction = (\n  payload: IChangeItemQuantityPayload\n): IChangeItemQuantityAction => ({\n  type: CHANGE_ITEM_QUANTITY,\n  payload,\n});\n\nexport const removeCartItemAction = (\n  cartItemId: string\n): IRemoveCartItemAction => ({\n  type: REMOVE_CART_ITEM,\n  payload: cartItemId,\n});\n\nexport const clearCartAction = (): IClearCartAction => ({\n  type: CLEAR_CART,\n});\n\nexport const loadCartStartAction = (): ILoadCartStartAction => ({\n  type: LOAD_CART_START,\n});\n\nexport const loadCartSuccessAction = (\n  cartItems: ICartItems\n): ILoadCartSuccessAction => ({\n  type: LOAD_CART_SUCCESS,\n  payload: cartItems,\n});\n\nexport const loadCartFailureAction = (\n  error: IError\n): ILoadCartFailureAction => ({\n  type: LOAD_CART_FAILURE,\n  payload: error,\n});\n","import uniqid from 'uniqid';\nimport {\n  ADD_NOTIFICATION,\n  IAddNotificationAction,\n  INotification,\n  IRemoveNotificationAction,\n  REMOVE_NOTIFICATION,\n} from './notifications.types';\n\nexport const addNotification = (\n  notification: Omit<INotification, 'id'>\n): IAddNotificationAction => ({\n  type: ADD_NOTIFICATION,\n  payload: {\n    ...notification,\n    id: uniqid(),\n  },\n});\n\nexport const removeNotification = (id: string): IRemoveNotificationAction => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n","import { IError } from '../../types/error.types';\n\nexport const FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START';\nexport const FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS';\nexport const FETCH_COLLECTIONS_FAILURE = 'FETCH_COLLECTIONS_FAILURE';\n\nexport interface ICollectionItem {\n  image: string;\n  name: string;\n  id: string;\n}\n\nexport type TCollections = ICollectionItem[];\n\nexport interface ICollectionsState {\n  collections: TCollections;\n  isLoading: boolean;\n  error: IError | null;\n}\n\nexport interface FetchCollectionsStartAction {\n  type: typeof FETCH_COLLECTIONS_START;\n  payload?: null;\n}\n\nexport interface FetchCollectionsSuccessAction {\n  type: typeof FETCH_COLLECTIONS_SUCCESS;\n  payload: TCollections;\n}\n\nexport interface FetchCollectionFailureAction {\n  type: typeof FETCH_COLLECTIONS_FAILURE;\n  payload: IError;\n}\n\nexport type CollectionsActionTypes =\n  | FetchCollectionsSuccessAction\n  | FetchCollectionsStartAction\n  | FetchCollectionFailureAction;\n","import { IGetProductsParams } from '../../api/requests.types';\nimport { IError } from '../../types/error.types';\n\ninterface IProductGender {\n  id: string;\n  name: string;\n}\n\nexport interface IProductImage {\n  url: string;\n  isMain: boolean;\n}\n\ninterface IProductLabel {\n  id: string;\n  name: string;\n}\n\ninterface IProductSeason {\n  id: string;\n  name: string;\n}\n\ntype TProductImages = IProductImage[];\n\nexport interface IProductSize {\n  id: string;\n  count: number;\n  name: string;\n}\n\nexport type TProductSizes = IProductSize[];\n\nexport interface IProduct {\n  collection: string;\n  id: string;\n  gender: IProductGender;\n  image: IProductImage;\n  inStock: boolean;\n  label: IProductLabel;\n  name: string;\n  oldPrice: string;\n  price: string;\n  season: IProductSeason;\n}\n\nexport interface IProductDetails extends IProduct {\n  description: string;\n  images: TProductImages;\n  sizes: TProductSizes;\n}\n\nexport type TProducts = IProduct[];\n\nexport interface IProductsState {\n  products: TProducts;\n  page: number;\n  pages: number;\n  total: number;\n  isLoading: boolean;\n  error: IError | null;\n}\n\nexport const FETCH_PRODUCTS_START = 'FETCH_PRODUCTS_START';\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\n\nexport interface FetchProductsStartAction {\n  type: typeof FETCH_PRODUCTS_START;\n  payload: IGetProductsParams;\n}\n\nexport interface FetchProductsSuccessPayload {\n  products: TProducts;\n  pages: number;\n}\n\nexport interface FetchProductsSuccessAction {\n  type: typeof FETCH_PRODUCTS_SUCCESS;\n  payload: FetchProductsSuccessPayload;\n}\n\nexport interface FetchProductsFailureAction {\n  type: typeof FETCH_PRODUCTS_FAILURE;\n  payload: IError;\n}\n\nexport type ProductsActionTypes =\n  | FetchProductsStartAction\n  | FetchProductsSuccessAction\n  | FetchProductsFailureAction;\n","export const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION';\n\nexport interface INotification {\n  type: 'error' | 'success';\n  id: string;\n  message: string;\n}\n\nexport type TNotifications = INotification[];\n\nexport interface INotificationsState {\n  notifications: TNotifications;\n}\n\nexport interface IAddNotificationAction {\n  type: typeof ADD_NOTIFICATION;\n  payload: INotification;\n}\n\nexport interface IRemoveNotificationAction {\n  type: typeof REMOVE_NOTIFICATION;\n  payload: string;\n}\n\nexport type NotificationActionTypes =\n  | IAddNotificationAction\n  | IRemoveNotificationAction;\n","export const isObject = (value: unknown): boolean =>\n  typeof value === 'object' && value !== null;\n","interface IAppConfig {\n  baseURL: string;\n}\n\nconst AppConfig: IAppConfig = {\n  baseURL: process.env.REACT_APP_BASE_URL || '/api',\n};\n\nexport default AppConfig;\n","import axios, { AxiosInstance } from 'axios';\nimport { isObject } from '../utils/checkers.utils';\nimport AppConfig from './config';\n\nconst api: AxiosInstance = axios.create({\n  baseURL: AppConfig.baseURL,\n});\n\ntype TAxiosData = unknown;\n\nconst parseObjectKey = (key: string): string =>\n  key.replace(/_+(\\w)/g, (str) => {\n    const [, s] = str.split('_');\n\n    return s.toUpperCase();\n  });\n\nconst parseData = (data: TAxiosData): TAxiosData => {\n  if (Array.isArray(data)) {\n    return data.map((entry) => {\n      if (isObject(entry)) return parseData(entry);\n\n      return entry;\n    });\n  }\n\n  if (typeof data === 'object' && data !== null) {\n    return Object.entries(data).reduce((res, [key, value]) => {\n      const parsedKey = parseObjectKey(key);\n\n      return {\n        ...res,\n        [parsedKey]: isObject(value) ? parseData(value) : value,\n      };\n    }, {});\n  }\n\n  return data;\n};\n\napi.interceptors.response.use((response) => {\n  return {\n    ...response,\n    data: parseData(response.data),\n  };\n});\n\n// api.interceptors.response.use(\n//   (response: AxiosResponse): AxiosResponse => ({\n//     ...response,\n//     data: Object.entries(response.data).reduce((data, [key, value]) => {\n//\n//       return {\n//         ...data,\n//         [key]: value,\n//       };\n//     }),\n//   })\n// );\n\nexport default api;\n","/* eslint-disable camelcase */\nimport {\n  TResponse,\n  IGetProductsParams,\n  IPaginatedData,\n} from './requests.types';\nimport { TCollections } from '../redux/collections/collections.types';\nimport { IProductDetails, TProducts } from '../redux/products/products.types';\nimport { IOrder } from '../types/order.types';\nimport api from './api';\n\nexport type TGetCollectionResponse = TResponse<TCollections>;\n\nexport const getCollections = (): TGetCollectionResponse =>\n  api.get('/collection/collection');\n\nexport type TProductsData = IPaginatedData<TProducts>;\n\nexport const getProducts = ({\n  page,\n  pageSize,\n  collection,\n}: IGetProductsParams): TResponse<TProductsData> =>\n  api.get('/product/product', {\n    params: { page, collection, page_size: pageSize },\n  });\n\nexport const getProductById = (id: string): TResponse<IProductDetails> =>\n  api.get(`/product/product/${id}`);\n\nexport const createOrder = ({\n  firstName: first_name,\n  lastName: last_name,\n  delAddress: del_address,\n  delCity: del_city,\n  email,\n  items,\n  phone,\n}: IOrder): TResponse<unknown> =>\n  api.post('/order/order/', {\n    first_name,\n    last_name,\n    del_address,\n    del_city,\n    email,\n    items,\n    phone,\n  });\n\nexport const getProductsByIds = (ids: string[]): TResponse<TProducts> =>\n  api.post('/product/product/by-ids/', { ids });\n","export const ERROR_NOTIFICATION = 'error';\n","import { Selector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { RootState } from '../root.reducer';\nimport { ICartState, TCartItemsEntries } from './cart.types';\n\nconst selectCart = (state: RootState) => state.cart;\n\nexport const selectCartIsOpened: Selector<RootState, boolean> = createSelector(\n  [selectCart],\n  ({ isOpened }: ICartState) => isOpened\n);\n\nexport const selectCartItems: Selector<\n  RootState,\n  TCartItemsEntries\n> = createSelector([selectCart], (cart: ICartState) =>\n  Object.entries(cart.items)\n);\n\nexport const selectCartItemsQuantity: Selector<\n  RootState,\n  number\n> = createSelector([selectCartItems], (cartItemEntries) =>\n  cartItemEntries.reduce((total, [, { quantity }]) => total + quantity, 0)\n);\n\nexport const selectCartTotal: Selector<RootState, number> = createSelector(\n  [selectCartItems],\n  (cartItemEntries) => {\n    const totalPrice = cartItemEntries.reduce(\n      (total, [, { price, quantity }]) => total + Number(price) * quantity,\n      0\n    );\n\n    return Number(totalPrice.toFixed(2));\n  }\n);\n","import React, { MouseEventHandler } from 'react';\nimport './app-btn-close.styles.scss';\n\ninterface IAppBtnCloseProps {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n}\n\nconst AppBtnClose = ({\n  onClick,\n  className,\n}: IAppBtnCloseProps): React.ReactElement => {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={`app-btn-close btn-default ${className}`}\n    >\n      ✕\n    </button>\n  );\n};\n\nAppBtnClose.defaultProps = {\n  className: '',\n};\n\nexport default AppBtnClose;\n","import { IError } from '../../types/error.types';\nimport {\n  FETCH_COLLECTIONS_FAILURE,\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FetchCollectionFailureAction,\n  FetchCollectionsStartAction,\n  FetchCollectionsSuccessAction,\n  TCollections,\n} from './collections.types';\n\nexport const fetchCollectionsSuccess = (\n  collections: TCollections\n): FetchCollectionsSuccessAction => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collections,\n});\n\nexport const fetchCollectionsStart = (): FetchCollectionsStartAction => ({\n  type: FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsFailure = (\n  error: IError\n): FetchCollectionFailureAction => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: error,\n});\n","import { IGetProductsParams } from '../../api/requests.types';\nimport { IError } from '../../types/error.types';\nimport {\n  FETCH_PRODUCTS_FAILURE,\n  FETCH_PRODUCTS_START,\n  FETCH_PRODUCTS_SUCCESS,\n  FetchProductsFailureAction,\n  FetchProductsStartAction,\n  FetchProductsSuccessAction,\n  FetchProductsSuccessPayload,\n} from './products.types';\n\nexport const fetchProductsStart = (\n  params: IGetProductsParams\n): FetchProductsStartAction => ({\n  type: FETCH_PRODUCTS_START,\n  payload: params,\n});\n\nexport const fetchProductsSuccess = (\n  payload: FetchProductsSuccessPayload\n): FetchProductsSuccessAction => ({\n  type: FETCH_PRODUCTS_SUCCESS,\n  payload,\n});\n\nexport const fetchProductsFailure = (\n  error: IError\n): FetchProductsFailureAction => ({\n  type: FETCH_PRODUCTS_FAILURE,\n  payload: error,\n});\n","import React from 'react';\nimport './spinner.styles.scss';\n\nconst Spinner: React.FC = () => (\n  <div className=\"spinner\">\n    <div className=\"spinner__container\" />\n  </div>\n);\n\nexport default Spinner;\n"],"sourceRoot":""}