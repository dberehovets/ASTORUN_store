{"version":3,"sources":["hooks/use-query.hook.ts","components/app-pagination/app-pagination.component.tsx","components/app-product-card/app-product-card.component.tsx","redux/products/products.selectors.ts","pages/collection-overview/collection-overview.page.tsx","HOCS/with-loader.hoc.tsx","assets/images/empty-products.svg","components/app-empty-products/app-empty-products.component.tsx"],"names":["useQuery","URLSearchParams","useLocation","search","AppPagination","count","classes","onChange","query","page","Number","get","url","useRouteMatch","useEffect","Pagination","shape","color","renderItem","item","PaginationItem","component","Link","to","AppProductCard","product","name","image","price","id","path","ProductDetailsRoute","getPath","className","Card","raised","CardActionArea","CardMedia","title","CardContent","CardActions","disableSpacing","IconButton","aria-label","selectProductsState","products","selectProducts","createSelector","selectProductsPages","pages","selectProductsLoading","isLoading","withLoader","setLoading","useSelector","dispatch","useDispatch","t","useTranslation","collection","params","handlePageChange","useCallback","fetchProductsStart","pageSize","map","length","root","Inner","displayName","props","useState","style","display","AppEmptyProducts","src","EmptyCart","alt"],"mappings":"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","file":"static/js/6.edb5e60d.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\n\nfunction useQuery(): URLSearchParams {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import { PaginationItem } from '@material-ui/lab';\nimport React, { useEffect } from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport useQuery from '../../hooks/use-query.hook';\n\ninterface IPaginationProps {\n  count: number;\n  classes: {\n    [key: string]: string;\n  };\n  onChange: ({ page }: { page: number }) => void;\n}\n\nconst AppPagination = ({\n  count,\n  classes,\n  onChange,\n}: IPaginationProps): React.ReactElement => {\n  const query = useQuery();\n  const page: number = Number(query.get('page')) || 1;\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    onChange({ page });\n  }, [page, onChange]);\n\n  return (\n    <Pagination\n      shape=\"rounded\"\n      color=\"primary\"\n      classes={classes}\n      page={page}\n      count={count}\n      renderItem={(item) => (\n        <PaginationItem\n          component={Link}\n          to={`${url}?page=${item.page}`}\n          {...item}\n        />\n      )}\n    />\n  );\n};\n\nexport default AppPagination;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  IconButton,\n  CardActionArea,\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { Link } from 'react-router-dom';\nimport { IProduct } from '../../redux/products/products.types';\nimport './app-product-card.styles.scss';\nimport { ProductDetailsRoute } from '../../routes/index';\n\ninterface ICardProps {\n  product: IProduct;\n}\n\nconst AppProductCard = ({ product }: ICardProps): React.ReactElement => {\n  const { name, image, price, id } = product;\n  const path = ProductDetailsRoute.getPath!(id);\n\n  return (\n    <Link to={path} className=\"app-product-card-wrapper\">\n      <Card raised className=\"app-product-card\">\n        <CardActionArea>\n          <CardMedia\n            className=\"app-product-card__media\"\n            image={image.url}\n            title={name}\n          />\n        </CardActionArea>\n\n        <CardContent className=\"app-product-card__content\">\n          <div className=\"app-product-card__info\">\n            <h4 className=\"app-product-card__title\">{name}</h4>\n            <span className=\"app-product-card__price\">{price}</span>\n          </div>\n        </CardContent>\n\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"share\">\n            <ShareIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </Link>\n  );\n};\n\nexport default AppProductCard;\n","import { createSelector, Selector } from 'reselect';\nimport { RootState } from '../root.reducer';\nimport { IProductsState, TProducts } from './products.types';\n\nconst selectProductsState = ({ products }: RootState): IProductsState =>\n  products;\n\nexport const selectProducts: Selector<RootState, TProducts> = createSelector(\n  [selectProductsState],\n  ({ products }) => products\n);\n\nexport const selectProductsPages: Selector<RootState, number> = createSelector(\n  [selectProductsState],\n  ({ pages }) => pages\n);\n\nexport const selectProductsLoading: Selector<\n  RootState,\n  boolean\n> = createSelector([selectProductsState], ({ isLoading }) => isLoading);\n","import React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AppEmptyProducts from '../../components/app-empty-products/app-empty-products.component';\nimport AppPagination from '../../components/app-pagination/app-pagination.component';\nimport AppProductCard from '../../components/app-product-card/app-product-card.component';\nimport withLoader, { IWithLoaderProps } from '../../HOCS/with-loader.hoc';\nimport { fetchProductsStart } from '../../redux/products/products.actions';\nimport {\n  selectProducts,\n  selectProductsLoading,\n  selectProductsPages,\n} from '../../redux/products/products.selectors';\nimport './collection-overview.styles.scss';\n\nconst CollectionOverviewPage = ({\n  setLoading,\n}: IWithLoaderProps): React.ReactElement => {\n  const products = useSelector(selectProducts);\n  const pages = useSelector(selectProductsPages);\n  const isLoading = useSelector(selectProductsLoading);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const {\n    params: { collection },\n  } = useRouteMatch<{ collection: string }>();\n\n  useEffect(() => {\n    setLoading(isLoading);\n  }, [isLoading, setLoading]);\n\n  const handlePageChange = useCallback(\n    ({ page }) => {\n      dispatch(\n        fetchProductsStart({\n          page,\n          collection,\n          pageSize: 9,\n        })\n      );\n    },\n    [dispatch, collection]\n  );\n\n  return (\n    <div className=\"container products-container\">\n      <h1 className=\"main-title\">{t('page.products.title')}</h1>\n\n      <div className=\"products-overview\">\n        {products.map((product) => (\n          <AppProductCard key={product.id} product={product} />\n        ))}\n        {!products.length && <AppEmptyProducts />}\n      </div>\n\n      <AppPagination\n        count={pages}\n        classes={{ root: 'products-pagination' }}\n        onChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default withLoader(CollectionOverviewPage);\n","import React, { useState } from 'react';\nimport Spinner from '../components/spinner/spinner.component';\n\nexport interface IWithLoaderProps {\n  isLoading: boolean;\n  setLoading: (isLoading: boolean) => void;\n}\n\nconst withLoader = <P extends IWithLoaderProps>(\n  Inner: React.ComponentType<P>\n): React.FC<P & IWithLoaderProps> => {\n  // eslint-disable-next-line no-param-reassign\n  Inner.displayName = `withLoader(${Inner.displayName || Inner.name})`;\n\n  return (props) => {\n    const [isLoading, setLoading] = useState<boolean>(false);\n\n    return (\n      <>\n        {isLoading && <Spinner />}\n        <div\n          className=\"flex-container\"\n          style={isLoading ? { display: 'none' } : {}}\n        >\n          <Inner {...props} isLoading={isLoading} setLoading={setLoading} />\n        </div>\n      </>\n    );\n  };\n};\n\nexport default withLoader;\n","export default __webpack_public_path__ + \"static/media/empty-products.4f81bf44.svg\";","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport EmptyCart from '../../assets/images/empty-products.svg';\nimport './app-empty-products.styles.scss';\n\nconst AppEmptyProducts: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"app-empty-products\">\n      <img\n        src={EmptyCart}\n        alt=\"empty products\"\n        className=\"app-empty-products__image\"\n      />\n      <p className=\"app-empty-products__text\">\n        {t('page.products.no_products')}\n      </p>\n    </div>\n  );\n};\n\nexport default AppEmptyProducts;\n"],"sourceRoot":""}