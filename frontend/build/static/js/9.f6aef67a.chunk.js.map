{"version":3,"sources":["components/app-carousel/app-carousel.component.tsx","components/app-select/app-select.component.tsx","pages/product-details/product-details.page.tsx"],"names":["AppCarousel","images","className","map","url","src","alt","AppSelect","items","onChange","value","label","id","FormControl","variant","classes","root","InputLabel","htmlFor","Select","labelId","e","String","target","item","MenuItem","ProductDetailsPage","useState","product","setProduct","selectedSize","setSize","params","useRouteMatch","dispatch","useDispatch","t","useTranslation","history","useHistory","useEffect","getProductById","productId","then","data","sizes","catch","message","addNotification","type","ERROR_NOTIFICATION","replace","ShopRoute","getPath","name","price","description","image","sliderImages","sizeNames","selectedSizeName","changedSize","find","sizeName","Button","color","onClick","addItemAction","imageUrl","isMain","Number"],"mappings":"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","file":"static/js/9.f6aef67a.chunk.js","sourcesContent":["import React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './app-carousel.styles.scss';\n\ninterface IAppCarouselProps {\n  images: string[];\n}\n\nconst AppCarousel = ({ images }: IAppCarouselProps): React.ReactElement => {\n  return (\n    <div className=\"app-carousel\">\n      <Carousel>\n        {images.map((url) => (\n          <img src={url} key={url} alt=\"astorun clothes\" />\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default AppCarousel;\n","import { FormControl, MenuItem, Select, InputLabel } from '@material-ui/core';\nimport React, { ChangeEvent } from 'react';\nimport './app-select.styles.scss';\n\ninterface IAppSelectProps {\n  items: (string | number)[];\n  onChange: (value: string) => void;\n  value: string | number;\n  label: string;\n  id: string;\n}\n\nconst AppSelect = ({\n  items,\n  onChange,\n  value,\n  label,\n  id,\n}: IAppSelectProps): React.ReactElement => {\n  const handleChange = (e: ChangeEvent<{ value: unknown }>): void => {\n    onChange(String(e.target.value));\n  };\n\n  return (\n    <FormControl variant=\"outlined\" classes={{ root: 'app-select-control' }}>\n      <InputLabel classes={{ root: 'app-select-label' }} htmlFor={id}>\n        {label}\n      </InputLabel>\n      <Select\n        classes={{ root: 'app-select-root' }}\n        labelId={id}\n        label={label}\n        value={value}\n        onChange={handleChange}\n      >\n        {items.map((item) => (\n          <MenuItem key={item} value={item}>\n            {item}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default AppSelect;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getProductById } from '../../api/requests';\nimport AppCarousel from '../../components/app-carousel/app-carousel.component';\nimport AppSelect from '../../components/app-select/app-select.component';\nimport { ERROR_NOTIFICATION } from '../../constants/notifications.constants';\nimport { addItemAction } from '../../redux/cart/cart.actions';\nimport { addNotification } from '../../redux/notifications/notifications.actions';\nimport {\n  IProductDetails,\n  IProductSize,\n} from '../../redux/products/products.types';\nimport './product-details.styles.scss';\nimport { ShopRoute } from '../../routes/index';\n\nconst ProductDetailsPage = (): React.ReactElement | null => {\n  const [product, setProduct] = useState<IProductDetails | null>(null);\n  const [selectedSize, setSize] = useState<IProductSize | null>(null);\n  const { params } = useRouteMatch<{ productId: string }>();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  useEffect(() => {\n    getProductById(params.productId)\n      .then(({ data }) => {\n        setProduct(data);\n        setSize(data.sizes?.[0] || null);\n      })\n      .catch(({ message }) => {\n        dispatch(\n          addNotification({\n            type: ERROR_NOTIFICATION,\n            message,\n          })\n        );\n\n        history.replace(ShopRoute.getPath());\n      });\n  }, [params, dispatch, history]);\n\n  if (!product) return null;\n\n  const { id, name, price, description, images, sizes, image } = product;\n\n  const sliderImages: string[] = images.map(({ url }) => url);\n  const sizeNames: string[] = sizes.map(({ name: productName }) => productName);\n\n  const addProductToCart = (): void => {\n    if (!selectedSize) return;\n\n    dispatch(\n      addItemAction({\n        id,\n        selectedSize,\n        name,\n        imageUrl: image?.url || images.find(({ isMain }) => isMain)?.url || '',\n        price: Number(price),\n      })\n    );\n  };\n\n  const handleSizeSelect = (selectedSizeName: string) => {\n    const changedSize = sizes.find(\n      ({ name: sizeName }) => selectedSizeName === sizeName\n    );\n\n    setSize(changedSize!);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-title\">{name}</h1>\n\n      <main className=\"product-details\">\n        <AppCarousel images={sliderImages} />\n\n        <div className=\"product-details__info\">\n          <div className=\"product-details__toolbar\">\n            <span className=\"product-details__price\">{price}</span>\n\n            <div className=\"product-details__size-select\">\n              <AppSelect\n                id=\"size-select\"\n                items={sizeNames}\n                onChange={handleSizeSelect}\n                value={selectedSize?.name || ''}\n                label={t('label.size')}\n              />\n            </div>\n\n            <Button\n              classes={{ root: 'product-details__btn' }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={addProductToCart}\n            >\n              {t('actions.add_to_cart')}\n            </Button>\n          </div>\n\n          <div className=\"product-details__description\">{description}</div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default ProductDetailsPage;\n"],"sourceRoot":""}